#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |  ?   |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC       &kp N1       &kp N2       &kp N3          &kp N4       &kp N5            &kp N6       &kp N7         &kp N8                 &kp N9   &kp N0    &kp UP_ARROW
&kp TAB       &kp Q        &kp W        &kp E           &kp R        &kp T             &kp Y        &kp U          &kp I                  &kp O    &kp P     &kp DOWN
&kp LCTRL     &mt LC(A) A  &mt LC(S) S  &kp D           &kp F        &kp G             &kp H        &kp J          &kp K                  &kp L    &kp SEMI  &kp SQT
&kp CAPSLOCK  &mt LC(Z) Z  &kp X        &mt LC(C) C     &mt LC(V) V  &kp B             &kp N        &kp M          &kp COMMA              &kp DOT  &kp FSLH  &kp BACKSLASH
                                        &lt 1 LEFT_GUI  &kp SPACE    &kp LEFT_SHIFT    &lt 2 ENTER  &kp BACKSPACE  &mt RALT K_CALCULATOR
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | BKSP |
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp HOME    &trans      &trans        &trans        &trans        &trans    &trans          &trans        &trans          &trans     &trans   &kp F12
&kp END     &kp F1      &kp F2        &kp F3        &kp F4        &kp F5    &kp F6          &kp F7        &kp F8          &kp F9     &kp F10  &kp F11
&kp INS     &kp N1      &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp N6          &kp N7        &kp N8          &kp N9     &kp N0   &trans
&kp DELETE  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &trans        &trans    &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans   &trans
                                      &trans        &trans        &trans    &trans          &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1           &kp N2       &kp N3    &kp N4      &kp N5         &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &trans
&trans  &kp EXCL         &kp AT       &kp HASH  &kp DLLR    &kp PRCNT      &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans           &trans       &trans    &trans      &trans         &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                      &trans    &trans      &trans         &trans     &trans     &trans
            >;
        };
    };
};
